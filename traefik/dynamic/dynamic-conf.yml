tls:
  options:
    default:
      sniStrict: true
      minVersion: VersionTLS13

http:

  middlewares:

    compress-mw:
      compress: { }

    redirect-tls-mw:
      headers:
        SSLRedirect: true
        STSSeconds: 315360000
        STSIncludeSubdomains: true
        STSPreload: true
        forceSTSHeader: true
    common-sec-mw:
      headers:
        customResponseHeaders:
          X-Robots-Tag: "noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex"
          X-XSS-PROTECTION: 1
          server: ""
          x-powered-by: ""
        accessControlAllowMethods: 'GET, OPTIONS, PUT, POST, PATCH, DELETE'
        accessControlMaxAge: 100
        addVaryHeader: true
        frameDeny: true
        contentTypeNosniff: true
        browserXssFilter: true
        customFrameOptionsValue: "SAMEORIGIN"
        referrerPolicy: "same-origin"
    jellyfin-mw:
      headers:
        customFrameOptionsValue: 'allow-from https://jellyfin.mete0r.fr'

  serversTransports:
    mytransport:
      insecureSkipVerify: true

  routers:
    router-homeassistant-ws:
      entryPoints:
      - https
      service: service-homeassistant-ws
      rule: "Host(`home.mete0r.fr`) && PathPrefix(`/api/websocket`)"
      tls:
        certResolver: default

    router-homeassistant:
      entryPoints:
      - https
      service: service-homeassistant
      rule: "Host(`home.mete0r.fr`)"
      tls:
        certResolver: default

    router-plex:
      entryPoints:
      - http
      - https
      service: service-plex
      rule: "Host(`plex.mete0r.fr`)"
      tls:
        certResolver: default

    router-transmission:
      entryPoints:
      - http
      - https
      service: service-transmission
      rule: "Host(`transmission.mete0r.fr`)"
      tls:
        certResolver: default

    router-jackett:
      entryPoints:
      - http
      - https
      service: service-jackett
      rule: "Host(`jackett.mete0r.fr`)"
      tls:
        certResolver: default

    router-lidarr:
      entryPoints:
      - http
      - https
      service: service-lidarr
      rule: "Host(`lidarr.mete0r.fr`)"
      tls:
        certResolver: default

    router-radarr:
      entryPoints:
      - http
      - https
      service: service-radarr
      rule: "Host(`radarr.mete0r.fr`)"
      tls:
        certResolver: default

    router-sonarr:
      entryPoints:
      - http
      - https
      service: service-sonarr
      rule: "Host(`sonarr.mete0r.fr`)"
      tls:
        certResolver: default

    router-bazarr:
      entryPoints:
      - http
      - https
      service: service-bazarr
      rule: "Host(`bazarr.mete0r.fr`)"
      tls:
        certResolver: default

    router-ombi:
      entryPoints:
      - http
      - https
      service: service-ombi
      rule: "Host(`ombi.mete0r.fr`)"
      tls:
        certResolver: default

    router-tautulli:
      entryPoints:
      - http
      - https
      service: service-tautulli
      rule: "Host(`tautulli.mete0r.fr`)"
      tls:
        certResolver: default

    router-status:
      entryPoints:
      - http
      - https
      service: service-status
      rule: "Host(`status.mete0r.fr`)"
      tls:
        certResolver: default

    router-crafty-controller:
      entryPoints:
      - http
      - https
      service: service-crafty-controller
      rule: "Host(`crafty.mete0r.fr`)"
      tls:
        certResolver: default

    router-jellyfin-controller:
      middlewares:
        - jellyfin-mw
      entryPoints:
      - http
      - https
      service: service-jellyfin-controller
      rule: "Host(`jellyfin.mete0r.fr`)"
      tls:
        certResolver: default

    router-accounts-jellyfin-controller:
      entryPoints:
      - http
      - https
      service: service-accounts-jellyfin-controller
      rule: "Host(`accounts.jellyfin.mete0r.fr`)"
      tls:
        certResolver: default

  services:
    service-homeassistant:
      loadBalancer:
        serversTransport: mytransport
        servers:
        - url: http://192.168.2.220:8123
        passHostHeader: true
    service-homeassistant-ws:
      loadBalancer:
        serversTransport: mytransport
        servers:
        - url: http://192.168.2.220:8123
        passHostHeader: true

    service-plex:
      loadBalancer:
        servers:
        - url: http://192.168.2.23:32400
        passHostHeader: true

    service-transmission:
      loadBalancer:
        servers:
        - url: http://192.168.2.23:9091
        passHostHeader: true

    service-jackett:
      loadBalancer:
        servers:
        - url: http://192.168.2.23:9117
        passHostHeader: true

    service-lidarr:
      loadBalancer:
        servers:
        - url: http://192.168.2.23:8686
        passHostHeader: true

    service-radarr:
      loadBalancer:
        servers:
        - url: http://192.168.2.23:8310
        passHostHeader: true

    service-sonarr:
      loadBalancer:
        servers:
        - url: http://192.168.2.23:8989
        passHostHeader: true

    service-bazarr:
      loadBalancer:
        servers:
        - url: http://192.168.2.23:6767
        passHostHeader: true

    service-ombi:
      loadBalancer:
        servers:
        - url: http://192.168.2.23:8822
        passHostHeader: true

    service-tautulli:
      loadBalancer:
        servers:
        - url: http://192.168.2.23:8181
        passHostHeader: true

    service-status:
      loadBalancer:
        servers:
        - url: http://192.168.2.220:3001/status/m3te0r
        passHostHeader: true

    service-crafty-controller:
      loadBalancer:
        serversTransport: mytransport
        servers:
        - url: https://192.168.2.23:8443/
        passHostHeader: true

    service-jellyfin-controller:
      loadBalancer:
        servers:
        - url: http://192.168.2.23:8096/
        passHostHeader: true

    service-accounts-jellyfin-controller:
      loadBalancer:
        servers:
        - url: http://192.168.2.23:8056/
        passHostHeader: true
